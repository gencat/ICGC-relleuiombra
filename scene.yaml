sources:
    osm:
      type: TopoJSON
      url: https://vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-JUsa0Gc
      max_zoom: 16
      rasters: [normals]
    cat:
        type: GeoJSON
        url: limitcat.geojson
        #type: MVT
        #url: http://betaserver.icgc.cat/tileservervt/tileserver.php/limitcat50m/{z}/{x}/{y}.pbf
        max_zoom: 16
        rasters: [normals]
    normals:
        type: Raster
        #url: https://terrain-preview.mapzen.com/normal/{z}/{x}/{y}.png
        #url: http://172.70.1.11/mapcache/tms/1.0.0/normalmap@GMTOTNW/{z}/{x}/{y}.png
        url: http://betaserver.icgc.cat/tileserver2/tileserver.php?/normalmap/{z}/{x}/{y}.png
        max_zoom: 16
        min_zoom: 7
scene:
    background:
        color: white
textures:
    spheremap:
        # url: spheremap.png
        element: "#kcanvas"

styles:
    hillshade:
        base: polygons
        raster: normal
        shaders:
            uniforms:
                u_scale: .5
                u_envmap: spheremap
            blocks:
                global: |
                    // Simplified view-independent environment map
                    vec4 applyEnvmap (in sampler2D _tex, in vec3 _normal) {
                        const vec3 eye = vec3(0.,0.,-1.);
                        vec3 r = reflect(eye, _normal);
                        r.z += 1.0;
                        float m = 2. * length(r);
                        vec2 uv = r.xy / m + .5;
                        return texture2D(_tex, uv);
                    }
                color: |
                    normal.z *= u_scale;
                    normal = normalize(normal);
                    color = applyEnvmap(u_envmap, normal);

layers:
    earth:
        data: { source: osm }
        draw:
            hillshade:
                order: 0
            lines:
                order: 2
                color: [.3, .3, .3]
                width: 1px
